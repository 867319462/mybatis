<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.TeacherMapper">
    <select id="selectTeacher" resultType="Teacher">
        select * from teacher;
    </select>

    <select id="selectTeacherById" resultMap="TeacherStudent">
        select t.id tid,t.NAME tname,s.id sid,s.NAME sname from teacher t
        left join student s on t.id = s.teacherId
        where t.id = #{id}
    </select>

    <resultMap id="TeacherStudent" type="Teacher">
        <result property="id" column="tid"/>
        <result property="name" column="tname"/>
        <!--复杂的属性，我们需要单独处理，对象：association  集合：collection
            javaType="" 指定属性的类型
            集合中的泛型信息，使用ofType获取
        -->
        <collection property="students" ofType="Student">
            <result property="id" column="sid"/>
            <result property="name" column="sname"/>
            <result property="teacherId" column="tid"/>
        </collection>
    </resultMap>


    <!--子查询-->
    <select id="selectTeacherById2" resultMap="TeacherStudent2">
        select * from teacher where id = #{id};
    </select>

    <resultMap id="TeacherStudent2" type="Teacher">
        <result property="id" column="id"/>
        <collection property="students" column="id" javaType="ArrayList" ofType="Student" select="getStudent"/>
    </resultMap>

    <select id="getStudent" resultType="Student">
        select * from student where teacherId = #{id};
    </select>
</mapper>
